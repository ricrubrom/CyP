1 5 15
Tema 1)

// Resolver el siguiente problema con SEMÁFOROS. Simular la atención en una Salita Médica para vacunar
// contra el coronavirus. Hay UNA enfermera encargada de vacunar a 30 pacientes, cada paciente tiene un
// turno asignado (valor entero entre 1..30 ya conocido por el paciente). La enfermera atiende a los pacientes
// en un consultorio (donde no puede haber más de un paciente a la vez) de acuerdo al turno que cada uno
// tiene asignado. Cada paciente al llegar espera a que sea su turno y luego se dirige al consultorio, le entrega la
// libreta de vacunación a la enfermera, espera que esta lo vacune y le devuelva la libreta firmada, y luego se
// retira. Nota: suponer que existe una función Vacunar() que simula la atención del paciente por parte de la
// enfermera. Todos los procesos deben terminar.

sem espera[30]=[30] 0
sem noPaciente=0;

Process paciente[id:0..29]{
    int turno ... ; //El paciente ya lo conoce;
    P(espera[turno]);
    V(noPaciente);
    // Entrega libreta
    P(finalizado);
}

Process enfermera{
    for(i=0;i<30;i++){
        V(espera[i]);
        P(noPaciente);
        Vacunar();
        V(finalizado);
    }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Tema 2)

// Resolver el siguiente problema con SEMÁFOROS. Simular la atención en una Terminal de Micros que
// posee 3 puestos para hisopar a 150 pasajeros. En cada puesto hay una Enfermera que atiende a los
// pasajeros de acuerdo al orden de llegada al mismo. Cuando llega un pasajero se dirige al puesto que tenga
// menos gente esperando. Espera a que la enfermera correspondiente lo llame para hisoparlo, y luego se
// retira. Nota: suponer que existe una función Hisopar() que simula la atención del pasajero por parte de la
// enfermera correspondiente.

queue cola[3];
sem espera[150]=[150] 0;
sem sEnfermeras[3]=[3] 0;
sem mutexCola[3]=[3] 1;
sem llegada[3]=[3] 0;
sem finalizado[3]=[3] 0;
sem seFue[3]=[3] 0;

Process pasajero[id:0..149]{
    int minCola;
    min(cola, minCola);  //Funcion que devuelve la cola   con menos personas

    P(mutexCola[minCola]);
    push(cola[minCola], id);
    V(mutexCola[minCola]);

    V(sEnfermeras[minCola]);

    P(espera[id]);

    V(llegada[minCola]);
    P(finalizado[minCola]);

    V(seFue[minCola]);
}

Process enfermera[id:0..2]{
    int idAux;
    while(true){
        P(sEnfermeras[id]);

        P(mutexCola[id]);
        pop(cola[id], idAux);
        V(mutexCola[id]);

        V(espera[idAux]);

        P(llegada[id]);
        Hisopar();
        V(finalizado[id]);

        P(seFue[id]);
    }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Tema 3)

// Resolver el siguiente problema con SEMÁFOROS. Simular la atención en un Centro de Vacunación con 8
// puestos para vacunar contra el coronavirus. Al Centro acuden 200 pacientes para ser vacunados, cada uno
// de ellos ya conoce el puesto al que se debe dirigir. En cada puesto hay UN empleado para vacunar a los
// pacientes asignados a dicho puesto, y lo hace de acuerdo al orden de llegada al mismo. Cada paciente al
// llegar al puesto que tenía asignado espera a que lo llamen para vacunarlo, y al terminar se retira. Nota:
// suponer que existe una función Vacunar() que simula la atención del paciente por parte del empleado.
// Suponer que cada puesto tiene asignado 25 pacientes. Todos los procesos deben terminar.

sem mutexCola=1;
sem mutexVariable=1;
sem espera[200]=[200] 0;
sem semEmpleado[8]=[8] 0;
sem finalizado[8]=[8] 0
sem seFue[8]=[8] 0
queue cola[8];
int atendidos=0;

Process paciente[id:0..199]{
    int puesto= ... // ya lo conoce;
    P(mutexCola);
    push(cola[puesto], id);
    V(mutexCola);

    V(semEmpleado[puesto]);
    P(espera[id])

    P(finalizado[puesto]);

    V(seFue[puesto]);
}

Process empleado[id:0..7]{
    int idAux;
    while(atendidos<200){
        P(semEmpleado[id]);
        if (atendidos==200) break;

        P(mutexCola);
        pop(cola[id], idAux);
        V(mutexCola);

        V(espera[idAux]);
        
        Vacunar()

        V(finalizado[id]);
        P(seFue[id]);

        P(mutexVariable);
        atendidos++;
        V(mutexVariable);
        if(atendidos==200){
            for(int i=0; i<8; i++) V(semEmpleado[i]);
        }
    }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~